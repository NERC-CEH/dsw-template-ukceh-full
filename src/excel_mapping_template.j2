{# Get some project metadata #}
{% set projectNamePath = [uuids.projectInformationCUuid, uuids.projectTitleQUuid]|reply_path %}
{% set projectName = replies[projectNamePath]|reply_str_value %}
{% set projectNumberPath = [uuids.projectInformationCUuid, uuids.projectNumberQUuid]|reply_path %}
{% set projectNumber = replies[projectNumberPath]|reply_str_value %}

{% set projectStartDatePath = [uuids.projectInformationCUuid, uuids.dateTheProjectWillStartQUuid]|reply_path %}
{% set projectStartDateReply = replies[projectStartDatePath]|reply_str_value %}
{% set projectEndDatePath = [uuids.projectInformationCUuid, uuids.dateTheProjectWillEndQUuid]|reply_path %}
{% set projectEndDateReply = replies[projectEndDatePath]|reply_str_value %}

{% set funderPath = [uuids.projectInformationCUuid, uuids.fundingQLUuid]|reply_path %}
{% set funderReply = replies[funderPath]|reply_items %}

{% set fundersList = [] %}

{% if funderReply|length > 0 %}
    {% for itemUuid in funderReply %}
        {% set funderNamePath = [funderPath, itemUuid, uuids.funderQUuid]|reply_path %}
        {% set funderNameReply = replies[funderNamePath] %}
        
        {% set fundingStatusPath = [funderPath, itemUuid, uuids.fundingStatusQUuid]|reply_path %}
        {% set fundingStatusReply = replies[fundingStatusPath]|reply_str_value %}
        {% set fundingStatusText = 'Unknown' %}
        {% if fundingStatusReply %}
            {% set fundingStatusText = km.entities.answers[fundingStatusReply].label %}
        {% endif %}

        {% set grantPath = [funderPath, itemUuid, uuids.grantNumberQUuid]|reply_path %}
        {% set grantReply = replies[grantPath]|reply_str_value %}
        {% set grantReplyText = "Grant number not supplied" %}
        {% if grantReply %}
            {% set grantReplyText = grantReply %}
        {% endif %}

        {% set funder = funderNameReply.value.value.value + " (" + fundingStatusText + ", " + grantReplyText + ")" %} 
      
        {% set fundersList = fundersList.append(funder) %}
        
    {% endfor %}
{% endif %}

{% set fundersString = (fundersList|join(", ")) %}
{#
{% if fundersList| length > 1 %}
    {% set fundersString = (fundersList|join(", ")) %}
{% else %}
    {% set fundersString = fundersList %}
{% endif %}
#}


{# Contributors #}
{% set contributorsPath = [uuids.projectInformationCUuid, uuids.contributorsQLUuid]|reply_path %}
{% set contributorsReply = replies[contributorsPath]|reply_items %}

{% if contributorsReply|length > 0 %} 
    {% set primaryContactList = [] %}
    {% set dataManagerList = [] %}

    {% for itemUuid in contributorsReply %}
        {% set contributorNamePath = [contributorsPath, itemUuid, uuids.nameQUuid] | reply_path %}
        {% set contributorNameReply = replies[contributorNamePath]  %}
        {% set contributorAffiliationPath = [contributorsPath, itemUuid, uuids.affiliationQUuid] | reply_path %}
        {% set contributorAffiliationReply = replies[contributorAffiliationPath] | reply_str_value %}
        {% set contributorRolePath = [contributorsPath, itemUuid, uuids.roleQUuid] | reply_path %}
        {% set contributorRoleReply = replies[contributorRolePath] | reply_items %}


        {# For each reply, loop through the roles and append the name of contributor to role list #}
        {% for itemUuid in contributorRoleReply %}
            {% if itemUuid == uuids.primaryContactChoiceUuid %}
                {% set primaryContactList = primaryContactList.append(contributorNameReply.value.value.value + " (" + (contributorAffiliationReply) + ")" ) %}
            {% elif itemUuid == uuids.dataManagerChoiceUuid %}	
                {% set dataManagerList = dataManagerList.append(contributorNameReply.value.value.value+ " (" + (contributorAffiliationReply) + ")" ) %}
            {% endif %}
        {% endfor %}
    {% endfor %}

{% endif %}

{% set primaryContactString = (primaryContactList|join(", ")) %} 
{% set dataManagerString = (dataManagerList|join(", ")) %} 

{% if ctx.phaseUuid == "b101f2d0-2476-452d-aa8d-95a41a02b52c" %}
    {% set currentPhaseString = "Before submitting the proposal" %}
{% elif ctx.phaseUuid == "1796fa3c-9f53-475f-89ff-c66a0453c42e" %}
    {% set currentPhaseString = "Within the first 3 months of the project" %}
{% elif ctx.phaseUuid == "adc9133d-afcd-4616-9aea-db5f475898a2" %}
    {% set currentPhaseString = "During the project" %}
{% elif ctx.phaseUuid == "e6b3786d-9246-4179-b78e-d99c8ca9435c" %}
    {% set currentPhaseString = "End of project" %}
{% endif %}

{%- set metaDataDeclarations = {
    'projectName': projectName,
    'projectNumber': projectNumber,
    'projectStart': projectStartDateReply,
    'projectEnd': projectEndDateReply,
    'funding': fundersString,
    'primaryContact': primaryContactString,
    'dataManager': dataManagerString,
    'currentPhase': currentPhaseString
} -%}


{# Dataset info #}
{%- set declarations = [] -%}

{% set datasetsPath = [uuids.preservingAndSharingDataCUuid, uuids.datasetsQUuid]|reply_path %}
{% set datasetsReply = replies[datasetsPath]|reply_str_value %}

{% set datasetListPath = [datasetsPath, uuids.specifyAListOfDatasetsYouWillBeProducingAUuid, uuids.listOfDatasetsQLUuid]|reply_path %}	
{% set datasetListReply = replies[datasetListPath]|reply_items %}

{% if datasetsReply == uuids.iWillNotBeProducingAnyDatasetsAsPartOfThisProjectAUuid %}
    
    {%- do declarations.append({
    'datasetTitleReply': "No data will be created by this project.",
    'datasetDescriptionReply': "",
    'datasetFormat': "",
    'datasetIDReply': "",
    'datasetLicenceTypeReplySplit': "",
    'datasetSizeReply': "",
    'datasetOwnerReply': "",
    'EnvDataOrInfoProduct': "",
    'datasetExistingDataReply': "",
    'datasetDateGeneratedReply': "",
    'longTermPlanReply': "",
    'depositDateReply': "",
    'embargo': "",
    'repository': "",
    'whoInTheProjectIsResponsibleForThisDatasetReply': ""
    }) -%}

{# they say yes we're creating datasets and list at least 1 #}
{% elif (datasetsReply == uuids.specifyAListOfDatasetsYouWillBeProducingAUuid) and (datasetListReply|length > 0) %}

    {% for itemUuid in datasetListReply %}
        {# Title #}
        {% set datasetTitlePath = [datasetListPath, itemUuid, uuids.datasetNameQUuid]|reply_path %}
        {% set datasetTitleReply = replies[datasetTitlePath]|reply_str_value %}
        {% if datasetTitleReply %}
            {% set datasetTitleReplyText = datasetTitleReply %}
        {% else %}
            {% set datasetTitleReplyText = missingInformationText %}
        {% endif %}
        
        {# Description #}
        {% set datasetDescriptionPath = [datasetListPath, itemUuid, uuids.datasetDescriptionQUuid]|reply_path %}
        {% set datasetDescriptionReply = replies[datasetDescriptionPath]|reply_str_value %}
        {% if datasetDescriptionReply %}
            {% set datasetDescriptionReplyText = datasetDescriptionReply %}
        {% else %}
            {% set datasetDescriptionReplyText = missingInformationText %}
        {% endif %}

        {# Format #}
        {% set datasetFormatPath = [datasetListPath, itemUuid, uuids.datasetFormatQUuid]|reply_path %}
        {% set datasetFormatReply = replies[datasetFormatPath]|reply_str_value %}
        {% if datasetFormatReply %}
            {% set datasetFormatReplySplit = datasetFormatReply.split(": '")[-1][:-2] %}
        {% else %}
            {% set datasetFormatReplySplit = missingInformationText %}
        {% endif %}

        {# ID #}
        {% set datasetIDPath = [datasetListPath, itemUuid, uuids.datasetIdentifierIfAnyQUuid]|reply_path %}
        {% set datasetIDReply = replies[datasetIDPath]|reply_str_value %}
        {% if datasetIDReply %}
            {% set datasetIDReplyText = datasetIDReply %}
        {% else %}
            {% set datasetIDReplyText = "Not yet known or not given" %}
        {% endif %}

        {# Licence #}
        {% set datasetLicencePath = [datasetListPath, itemUuid, uuids.whatLicenceSWillTheDatasetBeSharedUnderQLUuid]|reply_path %}
        {% set datasetLicenceListReply = replies[datasetLicencePath]|reply_items %}
        
        {% if datasetLicenceListReply|length > 0 %} {# this currently only prints the first licence in the list, if more than one licence is added they won't show in the table - I did this because its difficult to set a variable in a for loop then access that variable outdide the loop #}
            {# {% for itemLicenceUuid in datasetLicenceListReply %} #}
                {# Licence type #}
                {% set datasetLicenceTypePath = [datasetLicencePath, datasetLicenceListReply[0], uuids.licence_1QUuid]|reply_path %}
                {% set datasetLicenceTypeReply = replies[datasetLicenceTypePath]|reply_str_value %}

                {% if datasetLicenceTypeReply %}

                    {% set datasetLicenceTypeReplySplit = km.entities.answers[datasetLicenceTypeReply].label|replace("The dataset will be ","") %} 
                    {% set datasetLicenceTypeReplySplitText = km.entities.answers[datasetLicenceTypeReply].label|replace("The dataset will be ","") %} 
                                
                
                    {% if datasetLicenceTypeReply == uuids.theDatasetWillBeAvailableUnderSomeRestrictionsAUuid %}
                        
                        {% set datasetLicenceTypeReplySplitText = km.entities.answers[datasetLicenceTypeReply].label|replace("The dataset will be ","") %} 
                        {% set whatLicenceConditionsPath = [datasetLicenceTypePath, uuids.theDatasetWillBeAvailableUnderSomeRestrictionsAUuid, uuids.whatConditions_1QUuid]|reply_path %}
                        {% set whatLicenceConditionsReply = replies[whatLicenceConditionsPath]|reply_str_value %}

                        {% if whatLicenceConditionsReply %}
                            {% set datasetLicenceTypeReplySplitText = datasetLicenceTypeReplySplit + ": " + whatLicenceConditionsReply %}
                        {% else %}
                            {% set datasetLicenceTypeReplySplitText = datasetLicenceTypeReplySplit + ": " + missingInformationText %}
                        {% endif %}

                    {% else %}
                        {% set datasetLicenceTypeReplySplitText = km.entities.answers[datasetLicenceTypeReply].label|replace("The dataset will be ","") %}
                    {% endif %}
 
                {% else %}
                    {% set datasetLicenceTypeReplySplitText = missingInformationText %}
                {% endif %}          

    {#
            {% for itemLicenceUuid in datasetLicenceListReply %}

                Licence type
                {% set datasetLicenceTypePath = [datasetLicencePath, itemLicenceUuid, uuids.licence_1QUuid]|reply_path %}
                {% set datasetLicenceTypeReply = replies[datasetLicenceTypePath]|reply_str_value %}
                {% set datasetLicenceTypeReplySplit = km.entities.answers[datasetLicenceTypeReply].label|replace("The dataset will be ","") %}
                {{datasetLicenceTypeReplySplit}}

                {% if datasetLicenceTypeReply == uuids.theDatasetWillBeAvailableUnderSomeRestrictionsAUuid %}
                    {% set datasetLicenceSomeRestrictionsPath = [datasetLicenceTypePath, uuids.theDatasetWillBeAvailableUnderSomeRestrictionsAUuid]|reply_path %}

                    Licence conditions 
                    {% set whatLicenceConditionsPath = [datasetLicenceSomeRestrictionsPath, uuids.whatConditions_1QUuid]|reply_path %}
                    {% set whatLicenceConditionsReply = replies[whatLicenceConditionsPath]|reply_str_value %}
                    {{whatLicenceConditionsReply}}

                    Licence text 
                    {% set linkToTheLicenceTextPath = [datasetLicenceSomeRestrictionsPath, uuids.linkToTheLicenceText_1QUuid]|reply_path %}
                    {% set linkToTheLicenceTextReply = replies[linkToTheLicenceTextPath]|reply_str_value %}
                    {{linkToTheLicenceTextReply}}

                    User access 
                    {% set howWillReUsersBeAbleToGetAccessPath = [datasetLicenceSomeRestrictionsPath, uuids.howWillReUsersBeAbleToGetAccess_1QUuid]|reply_path %}
                    {% set howWillReUsersBeAbleToGetAccessReply = replies[howWillReUsersBeAbleToGetAccessPath]|reply_str_value %}
                    {{ km.entities.answers[howWillReUsersBeAbleToGetAccessReply].label }}

                    {% if howWillReUsersBeAbleToGetAccessReply == uuids.throughAnotherProcess_1AUuid %}
                        {% set whatProcessPath = [howWillReUsersBeAbleToGetAccessPath, uuids.throughAnotherProcess_1AUuid, uuids.whatProcess_1QUuid]|reply_path %}
                        {% set whatProcessReply = replies[whatProcessPath]|reply_str_value %}
                        {{whatProcessReply}}

                    {% endif %}

                    Conditions published as part of metadata
                    {% set willTheConditionsBePublishedAsPartOfTheMetadataPath = [datasetLicenceSomeRestrictionsPath, uuids.willTheConditionsBePublishedAsPartOfTheMetadata_1QUuid]|reply_path %}
                    {% set datasetLicenceSomeRestrictionsReply = replies[willTheConditionsBePublishedAsPartOfTheMetadataPath]|reply_str_value %}
                    {% if datasetLicenceSomeRestrictionsReply == uuids.no_145AUuid %}
                        <p>The licence conditions will not be published as part of the metadata.</p>
                    {% elif datasetLicenceSomeRestrictionsReply == uuids.yes_135AUuid %}
                        <p>The licence conditions will be published as part of the metadata.</p>
                    {% endif %}
                {% endif %}

                Starting date 
                {% set startingDatePath = [datasetLicencePath, itemLicenceUuid, uuids.startingDate_1QUuid]|reply_path %}
                {% set startingDateReply = replies[startingDatePath]|reply_str_value %}
                {{startingDateReply}}
    #} 
           {# {% endfor %} #}

        {% else %}
            {% set datasetLicenceTypeReplySplitText = missingInformationText %}
        {% endif %}

        {# Size #}
        {% set datasetSizePath = [datasetListPath, itemUuid, uuids.whatIsTheApproximateSizeOfTheDatasetQUuid]|reply_path %}
        {% set datasetSizeReply = replies[datasetSizePath]|reply_str_value %}
        {% if datasetSizeReply %}
            {% set datasetSizeReplyText = km.entities.answers[datasetSizeReply].label %}
        {% else %}
            {% set datasetSizeReplyText = missingInformationText %}
        {% endif %}

        {# IPR #}
        {% set datasetOwnerPath = [datasetListPath, itemUuid, uuids.whichOrganisationSHoldTheIntellectualPropertyRightsIprToThisDatasetQUuid]|reply_path %}
        {% set datasetOwnerReply = replies[datasetOwnerPath]|reply_str_value %}
        {% if datasetOwnerReply %}
            {% set datasetOwnerReplyText = datasetOwnerReply %}
        {% else %}
            {% set datasetOwnerReplyText = missingInformationText %}
        {% endif %}

        {# Environmental or Info product #}
        {% set doYouConsiderThisToBeEnvironmentalDataOrAnInformationProductPath = [datasetListPath, itemUuid, uuids.doYouConsiderThisToBeEnvironmentalDataOrAnInformationProductQUuid]|reply_path %}
        {% set doYouConsiderThisToBeEnvironmentalDataOrAnInformationProductReply = replies[doYouConsiderThisToBeEnvironmentalDataOrAnInformationProductPath]|reply_str_value %}
        {% if doYouConsiderThisToBeEnvironmentalDataOrAnInformationProductReply %}
            {% set EnvDataOrInfoProductText = km.entities.answers[doYouConsiderThisToBeEnvironmentalDataOrAnInformationProductReply].label %}
        {% else %}
            {% set EnvDataOrInfoProductText = missingInformationText %}
        {% endif %}

        {# Is data derived ?#}
        {% set datasetExistingDataPath = [datasetListPath, itemUuid, uuids.areDataDerivedFromExistingDataQUuid]|reply_path %}
        {% set datasetExistingDataReply = replies[datasetExistingDataPath]|reply_str_value %}
        {% if datasetExistingDataReply %}
            {% set datasetExistingDataReplyText = km.entities.answers[datasetExistingDataReply].label %}
        {% else %}
            {% set datasetExistingDataReplyText = missingInformationText %}
        {% endif %}

        {# Date generated #}
        {% set datasetDateGeneratedPath = [datasetListPath, itemUuid, uuids.whatIsTheEstimatedDateForWhenTheDatasetWillBeGeneratedQUuid]|reply_path %}
        {% set datasetDateGeneratedReply = replies[datasetDateGeneratedPath]|reply_str_value %}
        {% if datasetDateGeneratedReply %}
            {% set datasetDateGeneratedReplyText = datasetDateGeneratedReply %}
        {% else %}
            {% set datasetDateGeneratedReplyText = missingInformationText %}
        {% endif %}

        {# Long-term preservation plans (including deposit and access embargo date) #}
        {% set datasetLongTermPlanPath = [datasetListPath, itemUuid, uuids.areThereLongTermPreservationPlansInPlaceForThisDatasetQUuid]|reply_path %}
        {% set datasetLongTermPlanReply = replies[datasetLongTermPlanPath]|reply_str_value %}

        {% if datasetLongTermPlanReply %}
            {% if datasetLongTermPlanReply == uuids.yesItWillBeSentToARepositoryAUuid %}
                {% set longTermPlanReplyText = km.entities.answers[datasetLongTermPlanReply].label|replace("Yes, it will be ","") %}
                
                {# Deposit date #}
                {% set depositDatePath = [datasetLongTermPlanPath, uuids.yesItWillBeSentToARepositoryAUuid, uuids.whatIsThePlannedDepositDateQUuid]|reply_path %}
                {% set depositDateReply = replies[depositDatePath]|reply_str_value %}
                {% if depositDateReply %}
                    {% set depositDateReplyText = depositDateReply %}
                {% else %}
                    {% set depositDateReplyText = missingInformationText %}
                {% endif %}
                
                {# Embargo #}
                {% set depositEmbargoPath = [datasetLongTermPlanPath, uuids.yesItWillBeSentToARepositoryAUuid, uuids.willThereBeAnAccessEmbargoPeriodQUuid]|reply_path %}
                {% set depositEmbargoReply = replies[depositEmbargoPath]|reply_str_value %}
                {% if depositEmbargoReply == uuids.yes_1AUuid %}
                    {% set depositEmbargoDatePath = [depositEmbargoPath, uuids.yes_1AUuid, uuids.plannedAccessEmbargoReleaseDateQUuid]|reply_path %}
                    {% set depositEmbargoDateReply = replies[depositEmbargoDatePath]|reply_str_value %}
                    {% set embargoText = "Embargo period ending on " + depositEmbargoDateReply %}
                {% elif depositEmbargoReply == uuids.no_1AUuid %}
                    {% set embargoText = "No embargo period - data will be released immediately after deposit" %}
                {% else %}
                    {% set embargoText = missingInformationText %}
                {% endif %}

                {% set repositoryPath = [datasetLongTermPlanPath, uuids.yesItWillBeSentToARepositoryAUuid, uuids.whatRepositoryWillThisDataBeStoredInQUuid]|reply_path %}
                {% set repositoryReply = replies[repositoryPath]|reply_str_value %}
                {% if repositoryReply %}
                    {# Long term plan + repository answer#}
                    {#A domain specific repository answer was replaced with "Another repository"#}
                    {% if repositoryReply == uuids.aDomainSpecificRepositoryAUuid %}
                        {% set repositorySearchPath = [repositoryPath, uuids.aDomainSpecificRepositoryAUuid, uuids.searchAndSelectARepositoryQUuid]|reply_path %}
                        {% set repositorySearchReply = replies[repositorySearchPath] %}
                        {% if repositorySearchReply %}
                            {% set repositoryText = repositorySearchReply.value.value.value %}
                        {% else %}
                            {% set repositoryText = missingInformationText %}
                        {% endif %}

                    {# Special purpose repository #}	
                    {% elif repositoryReply == uuids.aSpecialPurposeRepositoryCreatedForTheProjectAUuid %}
                        {% set specialRepositoryNamePath = [repositoryPath, uuids.aSpecialPurposeRepositoryCreatedForTheProjectAUuid, uuids.giveTheNameOfTheRepositoryWhenItIsKnownQUuid]|reply_path %}
                        {% set specialRepositoryNameReply = replies[specialRepositoryNamePath]|reply_str_value %}
                        {% set specialRepositoryUrlPath = [repositoryPath, uuids.aSpecialPurposeRepositoryCreatedForTheProjectAUuid, uuids.giveTheUrlToTheRepositoryWhenItIsKnownQUuid]|reply_path %}
                        {% set specialRepositoryUrlReply = replies[specialRepositoryUrlPath]|reply_str_value %}
                        {% set repositoryText = km.entities.answers[repositoryReply].label + ": " + specialRepositoryNameReply + " found at " + specialRepositoryUrlReply %}
                        
                    {# One of the NERC data centre options #}	
                    {% else %}
                        {% set repositoryText = km.entities.answers[repositoryReply].label %}
                    {% endif %}
                {% else %}
                    {% set repositoryText = missingInformationText %}
                {% endif %}

            {# Plan for local store + location #}
            {% elif datasetLongTermPlanReply == uuids.yesItWillBeKeptLocallyAUuid %}

                {% set depositDateReplyText = 'N/A' %}
                {% set embargoText = 'N/A' %}	
                
                {% set localStorageWhyPath = [datasetLongTermPlanPath, uuids.yesItWillBeKeptLocallyAUuid, uuids.why_1QUuid]|reply_path %}
                {% set localStorageWhyReply = replies[localStorageWhyPath]|reply_str_value %}

                {% if localStorageWhyReply %}
                    
                    {% if localStorageWhyReply == uuids.other_2_1AUuid %}
                        {% set localStorageWhypleaseSpecifyPath = [localStorageWhyPath, uuids.other_2_1AUuid, uuids.pleaseSpecify_2_1QUuid]|reply_path %}
                        {% set localStorageWhypleaseSpecifyReply = replies[localStorageWhypleaseSpecifyPath]|reply_str_value %}
                        
                        {% if localStorageWhypleaseSpecifyReply %}
                            {% set longTermPlanReplyText = km.entities.answers[datasetLongTermPlanReply].label|replace("Yes, it will be ","") + ": " + localStorageWhypleaseSpecifyReply %}
                        {% else %}
                            {% set longTermPlanReplyText = km.entities.answers[datasetLongTermPlanReply].label|replace("Yes, it will be ","") + ": " + "reason why not yet given" %}
                        {% endif %}
                        
                    {% else %}
                        {% set longTermPlanReplyText = km.entities.answers[datasetLongTermPlanReply].label|replace("Yes, it will be ","") + ": " + km.entities.answers[localStorageWhyReply].label|lower %}
                        
                    {% endif %}

                    {% set localLocationPath = [datasetLongTermPlanPath, uuids.yesItWillBeKeptLocallyAUuid, uuids.pleaseProvideTheLocalLocationForThisDatasetQUuid]|reply_path %}
                    {% set localLocationReply = replies[localLocationPath]|reply_str_value %}

                    {% if localLocationReply %}
                        {% set repositoryText = localLocationReply %}
                    {% else %}
                        {% set repositoryText = "local location not given" %}
                    {% endif %}

                {% else %}
                    {% set longTermPlanReplyText = "Kept locally: reason why not yet given" %}
                    {% set repositoryText = "local location not yet given" %}

                {% endif %}

            {# Not kept in perpetuity and reasons #}	
            {% elif datasetLongTermPlanReply == uuids.noItWillNotBeKeptItInPerpetuityAUuid %}
                {% set depositDateReplyText = "N/A" %}
                {% set embargoText = "N/A" %}
                {% set repositoryText = "N/A" %}	
                {% set notKeptWhyPath = [datasetLongTermPlanPath, uuids.noItWillNotBeKeptItInPerpetuityAUuid, uuids.why_4QUuid]|reply_path %}
                {% set notKeptWhyReply = replies[notKeptWhyPath]|reply_str_value %}

                {% set longTermPlanReplyText = km.entities.answers[datasetLongTermPlanReply].label|replace("No, ","") + ": " + "reason why not given"  %}

                {% if notKeptWhyReply %}
                    {% if notKeptWhyReply == uuids.otherReasonS_3AUuid %}
                        {% set notKeptWhyPleaseSpecifyPath =  [notKeptWhyPath, uuids.otherReasonS_3AUuid, uuids.pleaseSpecify_5QUuid]|reply_path %}
                        {% set notKeptWhyPleaseSpecifyReply = replies[notKeptWhyPleaseSpecifyPath]|reply_str_value %}

                        {% set longTermPlanReplyText = km.entities.answers[datasetLongTermPlanReply].label|replace("No, ","") + ": " + notKeptWhyPleaseSpecifyReply %}
                        

                    {% elif notKeptWhyReply == (uuids.datasetIsOfNoLongTermValueAUuid) or (uuids.inadequateAndOrInsufficientFundsOrInfrastructureAUuid) or (uuids.itIsNotAFunderRequirementAUuid) or (theDataCanBeRegeneratedByAModelWithoutSignificantComputingBarriersAUuid) or (theCostOfRegeneratingTheDataDoesNotExceedTheCostOfCurationAUuid) %}
                        {% set longTermPlanReplyText = km.entities.answers[datasetLongTermPlanReply].label|replace("No, ","") + ": " + km.entities.answers[notKeptWhyReply].label %}

                    {% else %}
                        {% set longTermPlanReplyText = km.entities.answers[datasetLongTermPlanReply].label|replace("No, ","") + ": " + missingInformationText  %}
                    {% endif %}
                {% endif %}

            {% else %}
                {% set longTermPlanReplyText = missingInformationText %}
                {% set depositDateReplyText = missingInformationText %}
                {% set embargoText = missingInformationText %}
                {% set repositoryText = missingInformationText %}

            {% endif %}

        {% else %}    
            {% set longTermPlanReplyText = missingInformationText %}
            {% set depositDateReplyText = missingInformationText %}
            {% set embargoText = missingInformationText %}
            {% set repositoryText = missingInformationText %}

        {% endif %}

        {% set whoInTheProjectIsResponsibleForThisDatasetPath = [datasetListPath, itemUuid, uuids.whoInTheProjectIsResponsibleForThisDatasetQUuid]|reply_path %}
        {% set whoInTheProjectIsResponsibleForThisDatasetReply = replies[whoInTheProjectIsResponsibleForThisDatasetPath]|reply_str_value %}
        {% if whoInTheProjectIsResponsibleForThisDatasetReply %}
            {% set whoInTheProjectIsResponsibleForThisDatasetReplyText = whoInTheProjectIsResponsibleForThisDatasetReply %}
        {% else %}
            {% set whoInTheProjectIsResponsibleForThisDatasetReplyText = missingInformationText %}
        {% endif %}

        {# put answers together in dictionary for excel_template.json.j2 to pick up #}
        {%- do declarations.append({
            'datasetTitleReply': datasetTitleReplyText,
            'datasetDescriptionReply': datasetDescriptionReplyText,
            'datasetFormat': datasetFormatReplySplit,
            'datasetIDReply': datasetIDReplyText,
            'datasetLicenceTypeReplySplit': datasetLicenceTypeReplySplitText,
            'datasetSizeReply': datasetSizeReplyText,
            'datasetOwnerReply': datasetOwnerReplyText,
            'EnvDataOrInfoProduct': EnvDataOrInfoProductText,
            'datasetExistingDataReply': datasetExistingDataReplyText,
            'datasetDateGeneratedReply': datasetDateGeneratedReplyText,
            'longTermPlanReply': longTermPlanReplyText,
            'depositDateReply': depositDateReplyText,
            'embargo': embargoText,
            'repository': repositoryText,
            'whoInTheProjectIsResponsibleForThisDatasetReply': whoInTheProjectIsResponsibleForThisDatasetReplyText
        }) -%}


    {% endfor %}

{# they say yes we're creating datasets but then don't list any #}
{% elif (datasetsReply == uuids.specifyAListOfDatasetsYouWillBeProducingAUuid) and (datasetListReply|length == 0) %} 
    {%- do declarations.append({
    'datasetTitleReply': "No datasets listed!",
    'datasetDescriptionReply': "",
    'datasetFormat': "",
    'datasetIDReply': "",
    'datasetLicenceTypeReplySplit': "",
    'datasetSizeReply': "",
    'datasetOwnerReply': "",
    'EnvDataOrInfoProduct': "",
    'datasetExistingDataReply': "",
    'datasetDateGeneratedReply': "",
    'longTermPlanReply': "",
    'depositDateReply': "",
    'embargo': "",
    'repository': "",
    'whoInTheProjectIsResponsibleForThisDatasetReply': ""
    }) -%}
{% endif %}





{# Models info #}
{%- set declarations_models = [] -%}

{% set modelsPath = [uuids.preservingAndSharingDataCUuid, uuids.modelsQUuid]|reply_path %}
{% set modelsReply = replies[modelsPath]|reply_str_value %}

{% set modelListPath = [modelsPath, uuids.specifyAListOfModelsYouWillBeProducingAUuid, uuids.modelListQLUuid]|reply_path %}	
{% set modelListReply = replies[modelListPath]|reply_items %}

{% if modelsReply == uuids.iWillNotBeProducingModelsAsPartOfThisProjectAUuid %}
    {#if no models then set all the answers to empty #}
    {%- do declarations_models.append({
    'modelTitleReply': "No models will be created by this project.",
    'modelDescriptionReply': "",
    'modelIDReply': "",
    'modelLicenceTypeReplySplit': "",
    'modelSizeReply': "",
    'modelOwnerReply': "",
    'modelDerived': "",
    'modelDateCreated': "",
    'modelGithubReply': "",
    'modelLongTermPlanReply': "",
    'modelDepositDateReply': "",
    'modelEmbargo': "",
    'modelRepository': "",
    'whoInTheProjectIsResponsibleForThisModelReply': ""
    }) -%}

{# they say yes we're creating models and list at least 1 #}
{% elif (modelsReply == uuids.specifyAListOfModelsYouWillBeProducingAUuid) and modelListReply|length > 0 %}

    {% for itemUuid in modelListReply %}
            {# Title #}
            {% set modelTitlePath = [modelListPath, itemUuid, uuids.modelNameQUuid]|reply_path %}
            {% set modelTitleReply = replies[modelTitlePath]|reply_str_value %}
            {% if modelTitleReply %}
                {% set modelTitleReplyText = modelTitleReply %}
            {% else %}
                {% set modelTitleReplyText = missingInformationText %}
            {% endif %}
            
            {# Description #}
            {% set modelDescriptionPath = [modelListPath, itemUuid, uuids.modelDescriptionQUuid]|reply_path %}
            {% set modelDescriptionReply = replies[modelDescriptionPath]|reply_str_value %}
            {% if modelDescriptionReply %}
                {% set modelDescriptionReplyText = modelDescriptionReply %}
            {% else %}
                {% set modelDescriptionReplyText = missingInformationText %}
            {% endif %}

            {# ID #}
            {% set modelIDPath = [modelListPath, itemUuid, uuids.modelIdentifierIfAnyQLUuid]|reply_path %}
            {% set modelIDReply = replies[modelIDPath]|reply_str_value %}
            {% if modelIDReply %}
                {% set modelIDReplyText = modelIDReply %}
            {% else %}
                {% set modelIDReplyText = "Not yet known or not given" %}
            {% endif %}

            {# Licence #}
            {% set modelLicencePath = [modelListPath, itemUuid, uuids.whatLicenceSWillTheModelBeAvailableUnderQLUuid]|reply_path %}
            {% set modelLicenceListReply = replies[modelLicencePath]|reply_items %}
            
            {% if modelLicenceListReply|length > 0 %} {# this currently only prints the first licence in the list, if more than one licence is added they won't show in the table - I did this because its difficult to set a variable in a for loop then access that variable outdide the loop #}
                {# {% for itemLicenceUuid in modelLicenceListReply %} #}
                    {# Licence type #}
                    {% set modelLicenceTypePath = [modelLicencePath, modelLicenceListReply[0], uuids.licenceQUuid]|reply_path %}
                    {% set modelLicenceTypeReply = replies[modelLicenceTypePath]|reply_str_value %}

                    {% if modelLicenceTypeReply %}
                        {% set modelLicenceTypeReplySplit = km.entities.answers[modelLicenceTypeReply].label|replace("The model will be ","") %} 
                        {% set modelLicenceTypeReplySplitText = km.entities.answers[modelLicenceTypeReply].label|replace("The model will be ","") %} 

                        {% if modelLicenceTypeReply == uuids.theyWillBeAvailableUnderSomeRestrictionsAUuid %}
                            
                            {% set modelLicenceTypeReplySplitText = km.entities.answers[modelLicenceTypeReply].label|replace("The model will be ","") %} 
                            {% set modelLicenceConditionsPath = [modelLicenceTypePath, uuids.theyWillBeAvailableUnderSomeRestrictionsAUuid, uuids.whatConditions_2QUuid]|reply_path %}
                            {% set modelLicenceConditionsReply = replies[modelLicenceConditionsPath]|reply_str_value %}

                            {% if modelLicenceConditionsReply %}
                                {% set modelLicenceTypeReplySplitText = modelLicenceTypeReplySplit + ": " + modelLicenceConditionsReply %}
                            {% else %}
                                {% set modelLicenceTypeReplySplitText = modelLicenceTypeReplySplit + ": " + missingInformationText %}
                            {% endif %}

                        {% else %}
                            {% set modelLicenceTypeReplySplitText = km.entities.answers[modelLicenceTypeReply].label|replace("The model will be ","") %}
                        {% endif %}
    
                    {% else %}
                        {% set modelLicenceTypeReplySplitText = missingInformationText %}
                    {% endif %}
            
            {% else %}
                {% set modelLicenceTypeReplySplitText = missingInformationText %}
            {% endif %}

            {# Size #}
            {% set modelSizePath = [modelListPath, itemUuid, uuids.whatIsTheApproximateSizeOfThisModelAndAssociatedMaterialQUuid]|reply_path %}
            {% set modelSizeReply = replies[modelSizePath]|reply_str_value %}
            {% if modelSizeReply %}
                {% set modelSizeReplyText = km.entities.answers[modelSizeReply].label %}
            {% else %}
                {% set modelSizeReplyText = missingInformationText %}
            {% endif %}

            {# IPR #}
            {% set modelOwnerPath = [modelListPath, itemUuid, uuids.whichOrganisationSHoldTheIntellectualPropertyRightsIprToThisModelQUuid]|reply_path %}
            {% set modelOwnerReply = replies[modelOwnerPath]|reply_str_value %}
            {% if modelOwnerReply %}
                {% set modelOwnerReplyText = modelOwnerReply %}
            {% else %}
                {% set modelOwnerReplyText = missingInformationText %}
            {% endif %}

            {# Is model derived ?#}
            {% set modelExistingDataPath = [modelListPath, itemUuid, uuids.isTheModelDerivedFromExistingModelSQUuid]|reply_path %}
            {% set modelExistingDataReply = replies[modelExistingDataPath]|reply_str_value %}
            {% if modelExistingDataReply %}
                {% set modelExistingDataReplyText = km.entities.answers[modelExistingDataReply].label %}
            {% else %}
                {% set modelExistingDataReplyText = missingInformationText %}
            {% endif %}

            {# Date created #}
            {% set modelDateCreatedPath = [modelListPath, itemUuid, uuids.whatIsTheEstimatedDateForWhenTheModelWillBeCreatedQUuid]|reply_path %}
            {% set modelDateCreatedReply = replies[modelDateCreatedPath]|reply_str_value %}
            {% if modelDateCreatedReply %}
                {% set modelDateCreatedReplyText = modelDateCreatedReply %}
            {% else %}
                {% set modelDateCreatedReplyText = missingInformationText %}
            {% endif %}

            {# Available in GitHub #}
            {% set modelGitHubPath = [modelListPath, itemUuid, uuids.willYouDepositYourModelInGitHubOrOtherVersionedCodeRepositoryQUuid]|reply_path %}
            {% set modelGitHubReply = replies[modelGitHubPath]|reply_str_value %}

            {% if modelGitHubReply == uuids.yes_132AUuid %}

                {# Code repository URL #}
                {% set repositoryURLPath = [modelGitHubPath, uuids.yes_132AUuid, uuids.pleaseProvideTheCompleteUrlToTheCodeRepositoryWhenItIsKnownQUuid]|reply_path %}
                {% set repositoryURLReply = replies[repositoryURLPath]|reply_str_value %}
                {% if repositoryURLReply %}
                    {% set GitHubReplyText =  "Yes, " + repositoryURLReply %}
                {% else %}
                    {% set GitHubReplyText = "Yes, but repository URL not yet known" %}
                {% endif %}

            {% else %}
                {% set GitHubReplyText = "No" %}
            {% endif %}

            {# Long-term preservation plans (including deposit and access embargo date) #}
            {% set modelLongTermPlanPath = [modelListPath, itemUuid, uuids.areThereLongTermPreservationPlansInPlaceForThisModelQUuid]|reply_path %}
            {% set modelLongTermPlanReply = replies[modelLongTermPlanPath]|reply_str_value %}

            {# long-term repository #}
            {% if modelLongTermPlanReply == uuids.yesItWillBeSentToARepository_2AUuid %}
                {% set modellongTermPlanReplyText = km.entities.answers[modelLongTermPlanReply].label|replace("Yes, it will be ","") %}
                
                {# Deposit date #}
                {% set modeldepositDatePath = [modelLongTermPlanPath, uuids.yesItWillBeSentToARepository_2AUuid, uuids.whatIsThePlannedDepositDate_1QUuid]|reply_path %}
                {% set modeldepositDateReply = replies[dmodelepositDatePath]|reply_str_value %}
                {% if modeldepositDateReply %}
                    {% set modeldepositDateReplyText = modeldepositDateReply %}
                {% else %}
                    {% set modeldepositDateReplyText = missingInformationText %}
                {% endif %}
                
                {# Embargo #}
                {% set modeldepositEmbargoPath = [modelLongTermPlanPath, uuids.yesItWillBeSentToARepository_2AUuid, uuids.willThereBeAnAccessEmbargoPeriod_1QUuid]|reply_path %}
                {% set modeldepositEmbargoReply = replies[modeldepositEmbargoPath]|reply_str_value %}
                {% if modeldepositEmbargoReply == uuids.yes_4_3AUuid %}
                    {% set modeldepositEmbargoDatePath = [modeldepositEmbargoPath, uuids.yes_4_3AUuid, uuids.plannedAccessEmbargoReleaseDate_1QUuid]|reply_path %}
                    {% set modeldepositEmbargoDateReply = replies[modeldepositEmbargoDatePath]|reply_str_value %}
                    {% set modelembargoText = "Embargo period ending on " + modeldepositEmbargoDateReply %}
                {% elif modeldepositEmbargoReply == uuids.no_4_3AUuid %}
                    {% set modelembargoText = "No embargo period - data will be released immediately after deposit" %}
                {% else %}
                    {% set modelembargoText = missingInformationText %}
                {% endif %}

                {# what repository #}
                {% set modelrepositoryPath = [modelLongTermPlanPath, uuids.yesItWillBeSentToARepository_2AUuid, uuids.whatRepositoryWillTheModelBeStoredInQUuid]|reply_path %}
                {% set modelrepositoryReply = replies[modelrepositoryPath]|reply_str_value %}
                {% if modelrepositoryReply %}
                    {# Long term plan + repository answer#}
                    {#A domain specific repository answer was replaced with "Another repository"#}
                    {% if modelrepositoryReply == uuids.aDomainSpecificRepository_2AUuid %}
                        {% set modelrepositorySearchPath = [modelrepositoryPath, uuids.aDomainSpecificRepository_2AUuid, uuids.searchAndSelectARepository_2QUuid]|reply_path %}
                        {% set modelrepositorySearchReply = replies[modelrepositorySearchPath] %}
                        {% if modelrepositorySearchReply %}
                            {% set modelrepositoryText = modelrepositorySearchReply.value.value.value %}
                        {% else %}
                            {% set modelrepositoryText = missingInformationText %}
                        {% endif %}

                    {# Special purpose repository #}	
                    {% elif modelrepositoryReply == uuids.aSpecialPurposeRepositoryCreatedForTheProject_2AUuid %}
                        {% set modelspecialRepositoryNamePath = [modelrepositoryPath, uuids.aSpecialPurposeRepositoryCreatedForTheProject_2AUuid, uuids.giveTheNameOfTheRepositoryWhenItIsKnown_2QUuid]|reply_path %}
                        {% set modelspecialRepositoryNameReply = replies[modelspecialRepositoryNamePath]|reply_str_value %}
                        {% set modelspecialRepositoryUrlPath = [modelrepositoryPath, uuids.aSpecialPurposeRepositoryCreatedForTheProject_2AUuid, uuids.giveTheUrlToTheRepositoryWhenItIsKnown_2QUuid]|reply_path %}
                        {% set modelspecialRepositoryUrlReply = replies[modelspecialRepositoryUrlPath]|reply_str_value %}
                        {% set modelrepositoryText = km.entities.answers[modelrepositoryReply].label + ": " + modelspecialRepositoryNameReply + " found at " + modelspecialRepositoryUrlReply %}
                        
                    {# One of the NERC data centre options #}	
                    {% else %}
                        {% set modelrepositoryText = km.entities.answers[modelrepositoryReply].label %}
                    {% endif %}
                {% else %}
                    {% set modelrepositoryText = missingInformationText %}
                {% endif %}

            {# Plan for local store + location #}
            {% elif modelLongTermPlanReply == uuids.yesItWillBeKeptLocally_2AUuid %}
                
                {% set modellocalStorageWhyPath = [modelLongTermPlanPath, uuids.yesItWillBeKeptLocally_2AUuid, uuids.why_2_1QUuid]|reply_path %}
                {% set modellocalStorageWhyReply = replies[modellocalStorageWhyPath]|reply_str_value %}

                {% set modellocalStorageWhypleaseSpecifyPath = [modellocalStorageWhyPath, uuids.other_4_1AUuid, uuids.pleaseSpecify_4_1QUuid]|reply_path %}
                {% set modellocalStorageWhypleaseSpecifyReply = replies[modellocalStorageWhypleaseSpecifyPath]|reply_str_value %}
                
                {% if modellocalStorageWhyReply == uuids.other_4_1AUuid %}
                    {% set modellongTermPlanReplyText = km.entities.answers[modelLongTermPlanReply].label|replace("Yes, it will be ","") + ": " + modellocalStorageWhypleaseSpecifyReply %}
                {% else %}
                    {% set modellongTermPlanReplyText = km.entities.answers[modelLongTermPlanReply].label|replace("Yes, it will be ","") + ": " + km.entities.answers[modellocalStorageWhyReply].label|lower %}
                {% endif %}

                {% set modeldepositDateReplyText = 'N/A' %}
                {% set modelembargoText = 'N/A' %}	
                
                {% set modellocalLocationPath = [modelLongTermPlanPath, uuids.yesItWillBeKeptLocally_2AUuid, uuids.pleaseProvideTheLocalLocationForThisModelQUuid]|reply_path %}
                {% set modellocalLocationReply = replies[modellocalLocationPath]|reply_str_value %}

                {% if modellocalLocationReply %}
                    {% set modelrepositoryText = modellocalLocationReply %}
                {% else %}
                    {% set modelrepositoryText = "local location not given" %}
                {% endif %}

            {# Not kept in perpetuity and reasons #}	
            {% elif modelLongTermPlanReply == uuids.noItWillNotBeKeptInPerpetuityAUuid %}
                {% set modeldepositDateReplyText = "N/A" %}
                {% set modelembargoText = "N/A" %}
                {% set modelrepositoryText = "N/A" %}	
                {% set notKeptWhy2Path = [modelLongTermPlanPath, uuids.noItWillNotBeKeptInPerpetuityAUuid, uuids.why_6QUuid]|reply_path %}
                {% set notKeptWhy2Reply = replies[notKeptWhy2Path]|reply_str_value %}

                {% set modellongTermPlanReplyText = km.entities.answers[modelLongTermPlanReply].label|replace("No, ","") + ": " + "reason why not given"  %}

                {% if notKeptWhy2Reply %}
                    {% if notKeptWhy2Reply == uuids.otherReasonS_5AUuid %}
                        {% set notKeptWhy2PleaseSpecifyPath =  [notKeptWhy2Path, uuids.otherReasonS_5AUuid, uuids.pleaseSpecify_9QUuid]|reply_path %}
                        {% set notKeptWhy2PleaseSpecifyReply = replies[notKeptWhy2PleaseSpecifyPath]|reply_str_value %}

                        {% set modellongTermPlanReplyText = km.entities.answers[modelLongTermPlanReply].label|replace("No, ","") + ": " + notKeptWhy2PleaseSpecifyReply %}
                        

                    {% elif notKeptWhy2Reply == (uuids.modelIsOfNoLongTermValueAUuid) or (uuids.inadequateAndOrInsufficientFundsOrInfrastructure_2AUuid) or (uuids.itIsNotAFunderRequirement_2AUuid) or (uuids.theCostOfRegeneratingTheModelDoesNotExceedTheCostOfCurationAUuid) %}
                        {% set modellongTermPlanReplyText = km.entities.answers[modelLongTermPlanReply].label|replace("No, ","") + ": " + km.entities.answers[notKeptWhy2Reply].label %}

                    {% else %}
                        {% set modellongTermPlanReplyText = km.entities.answers[modelLongTermPlanReply].label|replace("No, ","") + ": " + missingInformationText  %}
                    {% endif %}
                {% endif %}

            {% else %}
                {% set modellongTermPlanReplyText = missingInformationText %}
                {% set modeldepositDateReplyText = missingInformationText %}
                {% set modelembargoText = missingInformationText %}
                {% set modelrepositoryText = missingInformationText %}

            {% endif %}

            {% set whoInTheProjectIsResponsibleForThisModelPath = [modelListPath, itemUuid, uuids.whoInTheProjectIsResponsibleForThisModelQUuid]|reply_path %}
            {% set whoInTheProjectIsResponsibleForThisModelReply = replies[whoInTheProjectIsResponsibleForThisModelPath]|reply_str_value %}
            {% if whoInTheProjectIsResponsibleForThisModelReply %}
                {% set whoInTheProjectIsResponsibleForThisModelReplyText = whoInTheProjectIsResponsibleForThisModelReply %}
            {% else %}
                {% set whoInTheProjectIsResponsibleForThisModelReplyText = missingInformationText %}
            {% endif %}

            {# put answers together #}
            {%- do declarations_models.append({
            'modelTitleReply': modelTitleReplyText,
            'modelDescriptionReply': modelDescriptionReplyText,
            'modelIDReply': modelIDReplyText,
            'modelLicenceTypeReplySplit': modelLicenceTypeReplySplitText,
            'modelSizeReply': modelSizeReplyText,
            'modelOwnerReply': modelOwnerReplyText,
            'modelDerived': modelExistingDataReplyText,
            'modelDateCreated': modelDateCreatedReplyText,
            'modelGithubReply': GitHubReplyText,
            'modelLongTermPlanReply': modellongTermPlanReplyText,
            'modelDepositDateReply': modeldepositDateReplyText,
            'modelEmbargo': modelembargoText,
            'modelRepository': modelrepositoryText,
            'whoInTheProjectIsResponsibleForThisModelReply': whoInTheProjectIsResponsibleForThisModelReplyText
            }) -%}
        
        {% endfor %}

{% elif (modelsReply == uuids.specifyAListOfModelsYouWillBeProducingAUuid) and modelListReply|length == 0 %}
    {%- do declarations_models.append({
    'modelTitleReply': "No models listed!",
    'modelDescriptionReply': "",
    'modelIDReply': "",
    'modelLicenceTypeReplySplit': "",
    'modelSizeReply': "",
    'modelOwnerReply': "",
    'modelDerived': "",
    'modelDateCreated': "",
    'modelGithubReply': "",
    'modelLongTermPlanReply': "",
    'modelDepositDateReply': "",
    'modelEmbargo': "",
    'modelRepository': "",
    'whoInTheProjectIsResponsibleForThisModelReply': ""
    }) -%}
{% endif %}



{# Software packages #}
{%- set declarations_software = [] -%}

{% set softwarePath = [uuids.preservingAndSharingDataCUuid, uuids.softwarePackagesQUuid]|reply_path %}
{% set softwareReply = replies[softwarePath]|reply_str_value%}
{% set softwareListPath = [softwarePath, uuids.specifyAListOfSoftwarePackagesYouWillBeProducingAUuid, uuids.softwarePackagesListQLUuid]|reply_path %}	
{% set softwareListReply = replies[softwareListPath]|reply_items %}

{% if softwareReply == uuids.iWillNotBeProducingAnySoftwarePackagesAsPartOfThisProjectAUuid %}
    {#if no software then set all the answers to empty #}
    {%- do declarations_software.append({
    'softwareTitleReplyText': "No software packages will be created by this project.",
    'softwareDescriptionReplyText': "",
    'softwarePackageIdentifierIfAnyReplyText': "",
    'softwareLicenseText': "",
    'softwareDateCreatedReplyText': "",
    'softwareVersionControlText': "",
    'softwareLongTermPlanText': "",
    'softdepositDateReplyText': "",
    'softembargoText': "",
    'personResponsibleSoftwareText': ""
    }) -%}

{% elif (softwareReply == uuids.specifyAListOfSoftwarePackagesYouWillBeProducingAUuid) and (softwareListReply|length > 0) %}
    {% for softItemUuid in softwareListReply %}
    
        {# Software name #}
        {% set softwareTitlePath = [softwareListPath, softItemUuid, uuids.softwarePackageNameQUuid]|reply_path %}
        {% set softwareTitleReply = replies[softwareTitlePath]|reply_str_value %}
        {% if softwareTitleReply %}
            {% set softwareTitleReplyText = softwareTitleReply %}
        {% else %}
            {% set softwareTitleReplyText = missingInformationText %}
        {% endif %}			
        
        {# Software description #}
        {% set softwareDescriptionPath = [softwareListPath, softItemUuid, uuids.softwarePackageDescriptionQUuid]|reply_path %}
        {% set softwareDescriptionReply = replies[softwareDescriptionPath]|reply_str_value %}
        {% if softwareDescriptionReply %}
            {% set softwareDescriptionReplyText = softwareDescriptionReply %}
        {% else %}
            {% set softwareDescriptionReplyText = missingInformationText %}
        {% endif %}				
        
        {# Software identifier DOI #}
        {% set softwarePackageIdentifierIfAnyPath = [softwareListPath, softItemUuid, uuids.softwarePackageIdentifierIfAnyQLUuid]|reply_path %}
        {% set softwarePackageIdentifierIfAnyReply = replies[softwarePackageIdentifierIfAnyPath]|reply_str_value %}
        {% if softwarePackageIdentifierIfAnyReply %}
            {% set softwarePackageIdentifierIfAnyReplyText = softwarePackageIdentifierIfAnyReply %}
        {% else %}
            {% set softwarePackageIdentifierIfAnyReplyText = missingInformationText %}
        {% endif %}					

        {# Open source license #}
        {% set softwareLicensePath = [softwareListPath, softItemUuid, uuids.willYouBeAddingAnOpenSourceLicenceQUuid]|reply_path %}
        {% set softwareLicenseReply = replies[softwareLicensePath]|reply_str_value %}
        {% if softwareLicenseReply %}
            {% if softwareLicenseReply == uuids.no_133AUuid %}
                {% set softwareLicenseYesNoText = "We will not be adding an Open Source License" %}
                {% set softwareLicenseWhyNotPath = [softwareLicensePath, uuids.no_133AUuid, uuids.doAnyOfTheFollowingApplyQUuid]|reply_path %}
                {% set softwareLicenseWhyNotListReply = replies[softwareLicenseWhyNotPath]|reply_items %}
                
                {% set values = [] %}
                {% for itemLicenceReason in softwareLicenseWhyNotListReply %}
                    {% set value =  km.entities.choices[itemLicenceReason].label %}
                    {% if value is defined %}
                        {% set _ = values.append(value) %}
                    {% endif %}
                {% endfor %}

                {% set softwareLicenseInfoText = " because: " + values|join(', ')  %}
            {% elif softwareLicenseReply == uuids.yesWeHaveDecidedOnAnOpenSourceLicenceAUuid %}
                {% set softwareLicenseYesNoText = "We will be adding an Open Source License" %}
                {% set softwareLicenseWhichPath = [softwareLicensePath, uuids.yesWeHaveDecidedOnAnOpenSourceLicenceAUuid, uuids.whatIsTheLicence_2QUuid]|reply_path %}
                {% set softwareLicenseWhichReply = replies[softwareLicenseWhichPath]|reply_str_value %}
                {% set softwareLicenseInfoText = "We will use " + softwareLicenseWhichReply %}
            {% endif %}	
            {% set softwareLicenseText = softwareLicenseYesNoText + softwareLicenseInfoText %}
        {% else %}
            {% set softwareLicenseText = missingInformationText %}
        {% endif %}

        {# Software derived from existing package #}
        {# CURRENT NEVER DESIRABLE
        {% set softwarePackageDerivedFromAnExistingPackagePath = [softwareListPath, itemUuid, uuids.isTheSoftwarePackageDerivedFromAnExistingPackageQUuid]|reply_path %}
        {% set softwarePackageDerivedFromAnExistingPackageReply = replies[softwarePackageDerivedFromAnExistingPackagePath]|reply_str_value %}
        {% if softwarePackageDerivedFromAnExistingPackageReply == uuids.no_5_3AUuid %}
            Software package is derived from an existing package
        {% elif softwarePackageDerivedFromAnExistingPackageReply == uuids.yes_5_3AUuid %}

        {% endif %}
        #}
        {% set softwareDateCreatedPath = [softwareListPath, softItemUuid, uuids.whatIsTheEstimatedDateForWhenTheSoftwarePackageWillBeCreatedQUuid]|reply_path %}
        {% set softwareDateCreatedReply = replies[softwareDateCreatedPath]|reply_str_value %}
        {% if softwareDateCreatedReply %}
            {% set softwareDateCreatedReplyText = softwareDateCreatedReply %}
        {% else %}
            {% set softwareDateCreatedReplyText = missingInformationText %}
        {% endif %}				
        
        {# Version control  #}
        {% set softwareVersionControlPath = [softwareListPath, softItemUuid, uuids.willYouDepositYourSoftwarePackageInGitHubOrOtherVersionedCodeRepositoryQUuid]|reply_path %}
        {% set softwareVersionControlReply = replies[softwareVersionControlPath]|reply_str_value %}
        {% if softwareVersionControlReply %}
            {% if softwareVersionControlReply == uuids.no_2_1AUuid %}
                {% set softwareVersionControlText = "We are not using version control for our code." %}
            {% elif softwareVersionControlReply == uuids.yes_2_1AUuid %}
                {% set softwareVersionControlUrlPath = [softwareVersionControlPath, uuids.yes_2_1AUuid, uuids.pleaseProvideTheCompleteUrlToTheCodeRepositoryWhenItIsKnown_2QUuid]|reply_path %}
                {% set softwareVersionControlUrlReply = replies[softwareVersionControlUrlPath]|reply_str_value %}
                {% set softwareVersionControlText = "Our code is version controlled and stored in the following location: " + softwareVersionControlUrlReply %}
            {% endif %}
        {% else %}
            {% set softwareVersionControlText = missingInformationText %}
        {% endif %}

        {# Long term preservation plans #}
        {% set softwareLongTermPlanPath = [softwareListPath, softItemUuid, uuids.areThereLongTermPreservationPlansInPlaceForThisSoftwarePackageQUuid]|reply_path %}
        {% set softwareLongTermPlanReply = replies[softwareLongTermPlanPath]|reply_str_value %}

        {# set embargo and deposit date as N/A now, to be replaced if user selects yes it will be sent to a repository #}
        {% set softdepositDateReplyText = "N/A" %}
        {% set softembargoText = "N/A" %}


        {# Sent to a repository #}
        {% if softwareLongTermPlanReply == uuids.yesItWillBeSentToARepository_3AUuid %}

            {% set softwareRepositoryVerifiedPath = [softwareLongTermPlanPath, uuids.yesItWillBeSentToARepository_3AUuid, uuids.haveYouVerifiedThatTheRepositoryStoresSoftwarePackagesQUuid]|reply_path %}
            {% set softwareRepositoryVerifiedReply = replies[softwareRepositoryVerifiedPath]|reply_str_value %}
            {% if softwareRepositoryVerifiedReply %}
                {% set softwareRepositoryVerifiedText = softwareRepositoryVerifiedReply %}
            {% else %}
                {% set softwareRepositoryVerifiedText = missingInformationText %}
            {% endif %}

            {# Deposit date #}
            {% set softdepositDatePath = [softwareLongTermPlanPath, uuids.yesItWillBeSentToARepository_3AUuid, uuids.whatIsThePlannedDepositDate_2QUuid]|reply_path %}
            {% set softdepositDateReply = replies[softdepositDatePath]|reply_str_value %}
            {% if softdepositDateReply %}
                {% set softdepositDateReplyText = softdepositDateReply %}
            {% else %}
                {% set softdepositDateReplyText = missingInformationText %}
            {% endif %}
            
            {# Embargo #}
            {% set softdepositEmbargoPath = [softwareLongTermPlanPath, uuids.yesItWillBeSentToARepository_3AUuid, uuids.willThereBeAnAccessEmbargoPeriod_1QUuid]|reply_path %}
            {% set softdepositEmbargoReply = replies[softdepositEmbargoPath]|reply_str_value %}
            {% if softdepositEmbargoReply == uuids.yes_4_3AUuid %}
                {% set softdepositEmbargoDatePath = [softdepositEmbargoPath, uuids.yes_6_3AUuid, uuids.plannedAccessEmbargoReleaseDate_2QUuid]|reply_path %}
                {% set softdepositEmbargoDateReply = replies[softdepositEmbargoDatePath]|reply_str_value %}
                {% set softembargoText = softdepositEmbargoDateReply %}
            {% elif softdepositEmbargoReply == uuids.no_6_3AUuid %}
                {% set softembargoText = "No embargo period - data will be released immediately after deposit" %}
            {% else %}
                {% set softembargoText = missingInformationText %}
            {% endif %}


            {# what repository #}
            {% set softwareRepositoryPath = [softwareLongTermPlanPath, uuids.yesItWillBeSentToARepository_3AUuid, uuids.whatRepositoryWillTheSoftwarePackageBeStoredInQUuid]|reply_path %}
            {% set softwareRepositoryReply = replies[softwareRepositoryPath]|reply_str_value %}
            {% if softwareRepositoryReply %}
                {# Long term plan + repository answer#}
                {#A domain specific repository answer was replaced with "Another repository"#}
                {% if softwareRepositoryReply == uuids.aDomainSpecificRepository_3AUuid %}
                    {% set softwareRepositorySearchPath = [softwareRepositoryPath, uuids.aDomainSpecificRepository_3AUuid, uuids.searchAndSelectARepository_3QUuid]|reply_path %}
                    {% set softwareRepositorySearchReply = replies[softwareRepositorySearchPath] %}

                    {% set softwareRepositorySearchWhatTypeOfRepositoryPath = [softwareRepositoryPath, uuids.aDomainSpecificRepository_3AUuid, uuids.whatTypeOfRepositoryIsThis_3QUuid]|reply_path %}
                    {% set softwareRepositorySearchWhatTypeOfRepositoryReply = replies[softwareRepositorySearchWhatTypeOfRepositoryPath]|reply_str_value  %}
                    {% if softwareRepositorySearchWhatTypeOfRepositoryReply %}
                        {% set softwareRepositorySearchWhatTypeOfRepositoryReplyText = km.entities.answers[softwareRepositorySearchWhatTypeOfRepositoryReply].label %}
                    {% else %}
                        {% set softwareRepositorySearchWhatTypeOfRepositoryReplyText = missingInformationText %}
                    {% endif %}

                    {% set softwareRepositorySearchWhyThisRepositoryPath = [softwareRepositoryPath, uuids.aDomainSpecificRepository_3AUuid, uuids.whyHaveYouChosenThisRepository_3QUuid]|reply_path %}
                    {% set softwareRepositorySearchWhyThisRepositoryReply = replies[softwareRepositorySearchWhyThisRepositoryPath]|reply_str_value  %}

                    {% if softwareRepositorySearchWhyThisRepositoryReply == uuids.funderRequirementEGForNonNercFundedProjects_3AUuid %}
                        {% set softwareRepositorySearchWhyThisRepositoryReplyText = km.entities.answers[softwareRepositorySearchWhyThisRepositoryReply].label %}

                    {% elif softwareRepositorySearchWhyThisRepositoryReply == uuids.other_5_1AUuid %}
                        {% set softwareRepositorySearchWhyThisRepositoryOtherPath = [softwareRepositoryPath, uuids.aDomainSpecificRepository_3AUuid, uuids.whyHaveYouChosenThisRepository_3QUuid, uuids.other_5_1AUuid, uuids.pleaseSpecify_5_1QUuid]|reply_path %}
                        {% set softwareRepositorySearchWhyThisRepositoryOtherReply = replies[softwareRepositorySearchWhyThisRepositoryOtherPath]|reply_str_value %}

                        {% if softwareRepositorySearchWhyThisRepositoryOtherReply %}
                            {% set softwareRepositorySearchWhyThisRepositoryReplyText = softwareRepositorySearchWhyThisRepositoryOtherReply|lower %}
                        {% else %}
                            {% set softwareRepositorySearchWhyThisRepositoryReplyText = missingInformationText %}
                        {% endif %}
                    {% endif %}	

                    {% if softwareRepositorySearchReply and softwareRepositorySearchWhatTypeOfRepositoryReply and softwareRepositorySearchWhyThisRepositoryReply %}
                        {% set softwareLongTermPlanText = 'Archived with ' + softwareRepositorySearchReply.value.value.value + ", " + softwareRepositorySearchWhatTypeOfRepositoryReplyText + ", because: " + softwareRepositorySearchWhyThisRepositoryReplyText %}
                    {% else %}
                        {% set softwareLongTermPlanText = missingInformationText %}
                    {% endif %}

                {# Special purpose repository #}	
                {% elif softwareLongTermPlanReply == uuids.aSpecialPurposeRepositoryCreatedForTheProject_3AUuid %}
                    {% set softwareLongTermPlan = 'Will be archived in a special purpose repository created for the project' %}
                    {% set softwareSpecialRepositoryNamePath = [softwareRepositoryPath, uuids.aSpecialPurposeRepositoryCreatedForTheProject_3AUuid, uuids.giveTheNameOfTheRepositoryWhenItIsKnown_3QUuid]|reply_path %}
                    {% set softwareSpecialRepositoryNameReply = replies[softwareSpecialRepositoryNamePath]|reply_str_value%}
                    {% set softwareSpecialRepositoryUrlPath = [softwareRepositoryPath, uuids.aSpecialPurposeRepositoryCreatedForTheProject_3AUuid, uuids.giveTheUrlToTheRepositoryWhenItIsKnown_3QUuid]|reply_path %}
                    {% set softwareSpecialRepositoryUrlReply = replies[softwareSpecialRepositoryUrlPath]|reply_str_value%}

                    {% set softwareSpecialRepositorySupportTimePath = [softwareRepositoryPath, uuids.aSpecialPurposeRepositoryCreatedForTheProject_3AUuid, uuids.willYouBeAbleToSupportThisRepositoryForASufficientlyLongTime_3QUuid]|reply_path %}
                    {% set softwareSpecialRepositorySupportTimeReply = replies[softwareSpecialRepositorySupportTimePath]|reply_str_value%}
                    {% if softwareSpecialRepositorySupportTimeReply == uuids.no_135AUuid %}
                        {% set softwareSpecialRepositorySupportTimeText = "We won't be able to support the repository for a sufficiently long time." %}
                    {% elif softwareSpecialRepositorySupportTimeReply == uuids.yes_125AUuid %}
                        {% set softwareSpecialRepositorySupportTimeText = "We will support the repository for a sufficiently long time." %}
                    {% endif %}

                    {% set softwareSpecialRepositoryServiceLevelPath = [softwareRepositoryPath, uuids.aSpecialPurposeRepositoryCreatedForTheProject_3AUuid, uuids.whatIsTheServiceLevelYouWillBeOfferingUsersOfTheSoftwarePackageRepositoryQUuid]|reply_path %}
                    {% set softwareSpecialRepositoryServiceLevelReply = replies[softwareSpecialRepositoryServiceLevelPath]|reply_str_value%}					
                    

                    {% if softwareSpecialRepositoryNameReply and softwareSpecialRepositoryUrlReply and softwareSpecialRepositorySupportTimeReply and softwareSpecialRepositoryServiceLevelReply %}
                        {% set softwareLongTermPlanText = 'A special purpose repository created for the project, ' + softwareSpecialRepositoryNameReply + ", " + softwareSpecialRepositoryUrlReply + ". Service level provided: " + softwareSpecialRepositoryServiceLevelReply + softwareSpecialRepositorySupportTimeText %}
                    {% else %}
                        {% set softwareLongTermPlanText = missingInformationText %}
                    {% endif %}
                
                {# One of the NERC data centre options #}	
                {% else %}
                    {% set softwareLongTermPlanText = softwareRepositoryReply %}
                {% endif %}
            {% else %}
                {% set softwareLongTermPlanText = missingInformationText %}
            {% endif %}

        {% elif softwareLongTermPlanReply == uuids.yesItWillBeKeptLocally_3AUuid %}
            {% set softwareLongTermPlan = 'Will be kept locally at ' %}
            {% set softwareLocalLocationPath = [softwareLongTermPlanPath, uuids.yesItWillBeKeptLocally_3AUuid, uuids.pleaseProvideTheLocalLocationForThisSoftwarePackageQUuid]|reply_path %}
            {% set softwareLocalLocationReply = replies[softwareLocalLocationPath]|reply_str_value %}

            {% set softwareLocalStorageWhyPath = [softwareLongTermPlanPath, uuids.yesItWillBeKeptLocally_3AUuid, uuids.why_3_1QUuid]|reply_path %}
            {% set softwareLocalStorageWhyReply = replies[softwareLocalStorageWhyPath]|reply_str_value %}

            {% set softwareLocalStorageWhyOtherPath = [softwareLocalStorageWhyPath, uuids.other_6_1AUuid, uuids.pleaseSpecify_6_1QUuid]|reply_path %}
            {% set softwareLocalStorageWhyOtherReply = replies[softwareLocalStorageWhyOtherPath]|reply_str_value %}

            {% if softwareLocalLocationReply and (softwareLocalStorageWhyReply == uuids.other_6_1AUuid)  %}
                {% set softwareLongTermPlanText = softwareLongTermPlan + softwareLocalLocationReply + " because " + softwareLocalStorageWhyOtherReply %}
            {% elif softwareLocalLocationReply and softwareLocalStorageWhyReply %}
                {% set softwareLongTermPlanText = softwareLongTermPlan + softwareLocalLocationReply + " because " + km.entities.answers[softwareLocalStorageWhyReply].label %}
            {% else %}
                {% set softwareLongTermPlanText = missingInformationText %}
            {% endif %}				


        {% elif softwareLongTermPlanReply == uuids.noItWillNotBeKeptInPerpetuity_2AUuid %}
            {% set softwareNotKeptWhyPath = [softwareLongTermPlanPath, uuids.noItWillNotBeKeptInPerpetuity_2AUuid, uuids.why_8QUuid]|reply_path %}
            {% set softwareNotKeptWhyReply = replies[softwareNotKeptWhyPath]|reply_str_value %}				

            {% if softwareNotKeptWhyReply == uuids.otherReasonS_7AUuid %}
                {% set softwareNotKeptWhyPleaseSpecifyPath = [softwareNotKeptWhyPath, uuids.otherReasonS_7AUuid, uuids.pleaseSpecify_13QUuid]|reply_path %}
                {% set softwareNotKeptWhyPleaseSpecifyReply = replies[softwareNotKeptWhyPleaseSpecifyPath]|reply_str_value %}
                {% set softwareLongTermPlanText = "It will not be kept in perpetuity because " + softwareNotKeptWhyPleaseSpecifyReply %}
            {% elif softwareNotKeptWhyReply %}
                {% set softwareLongTermPlanText = "It will not be kept in perpetuity beacuse " + km.entities.answers[softwareNotKeptWhyReply].label %}
            {% else %}
                {% set softwareLongTermPlanText = missingInformationText %}
            {% endif %}		

        {% endif %}

        {% set whoInTheProjectIsResponsibleForThisSoftwarePackagePath = [softwareListPath, softItemUuid, uuids.whoInTheProjectIsResponsibleForThisSoftwarePackageQUuid]|reply_path %}
        {% set whoInTheProjectIsResponsibleForThisSoftwarePackageReply = replies[whoInTheProjectIsResponsibleForThisSoftwarePackagePath]|reply_str_value %}

        {% if whoInTheProjectIsResponsibleForThisSoftwarePackageReply %}
            {% set personResponsibleSoftwareText = whoInTheProjectIsResponsibleForThisSoftwarePackageReply %}
        {% else %}
            {% set personResponsibleSoftwareText = missingInformationText %}
        {% endif %}	

        {# put answers together #}
        {%- do declarations_software.append({
        'softwareTitleReplyText': softwareTitleReplyText,
        'softwareDescriptionReplyText': softwareDescriptionReplyText,
        'softwarePackageIdentifierIfAnyReplyText': softwarePackageIdentifierIfAnyReplyText,
        'softwareLicenseText': softwareLicenseText,
        'softwareDateCreatedReplyText': softwareDateCreatedReplyText,
        'softwareVersionControlText': softwareVersionControlText,
        'softwareLongTermPlanText': softwareLongTermPlanText,
        'softdepositDateReplyText': softdepositDateReplyText,
        'softembargoText': softembargoText,
        'personResponsibleSoftwareText': personResponsibleSoftwareText
        }) -%}
    {% endfor %}	

{% elif (softwareReply == uuids.specifyAListOfSoftwarePackagesYouWillBeProducingAUuid) and softwareListReply|length == 0 %}

    {%- do declarations_software.append({
    'softwareTitleReplyText': "No software packages listed!",
    'softwareDescriptionReplyText': "",
    'softwarePackageIdentifierIfAnyReplyText': "",
    'softwareLicenseText': "",
    'softwareDateCreatedReplyText': "",
    'softwareVersionControlText': "",
    'softwareLongTermPlanText': "",
    'softdepositDateReplyText': "",
    'softembargoText': "",
    'personResponsibleSoftwareText': ""
    }) -%}
{% endif %}


{# Physical samples #}
{%- set declarations_physicalSamples = [] -%}

{% set samplesPath = [uuids.preservingAndSharingDataCUuid, uuids.physicalCollectionsAndSamplesQUuid]|reply_path %}
{% set samplesReply = replies[samplesPath]|reply_str_value%}
{% set samplesListPath = [samplesPath, uuids.specifyAListOfPhysicalSamplesYouWillBeProducingAUuid, uuids.listOfPhysicalCollectionsQLUuid]|reply_path %}	
{% set samplesListReply = replies[samplesListPath]|reply_items %}

{% if samplesReply == uuids.iWillNotBeProducingAnyPhysicalCollectionsOrSamplesAsPartOfThisProjectAUuid %}
    {#if no physical samples then set all the answers to empty #}
    {%- do declarations_physicalSamples.append({
    'samplesTitleReplyText': "No physical samples will be created by this project.",
    'samplesDescriptionReplyText': "",
    'samplesSizeReplyText': "",
    'samplesOwnerReplyText': "",
    'samplesDateGeneratedReplyText': "",
    'samplesLongTermText': "",
    'samplesResponsiblePersonReplyText': ""
    }) -%}

{% elif (samplesReply == uuids.specifyAListOfPhysicalSamplesYouWillBeProducingAUuid) and (samplesListReply|length > 0) %}	
    {% for physicalitemUuid in samplesListReply %}
        {# Sample name #}
        {% set samplesTitlePath = [samplesListPath, physicalitemUuid, uuids.physicalCollectionNameQUuid]|reply_path %}
        {% set samplesTitleReply = replies[samplesTitlePath]|reply_str_value %}
        {% if samplesTitleReply %}
            {% set samplesTitleReplyText = samplesTitleReply %}
        {% else %}
            {% set samplesTitleReplyText = missingInformationText %}
        {% endif %}		

        {# Sample description #}
        {% set samplesDescriptionPath = [samplesListPath, physicalitemUuid, uuids.physicalCollectionDescriptionQUuid]|reply_path %}
        {% set samplesDescriptionReply = replies[samplesDescriptionPath]|reply_str_value %}
        {% if samplesDescriptionReply %}
            {% set samplesDescriptionReplyText = samplesDescriptionReply %}
        {% else %}
            {% set samplesDescriptionReplyText = missingInformationText %}
        {% endif %}					
        
        {# Sample date generated #}
        {% set samplesDateGeneratedPath = [samplesListPath, physicalitemUuid, uuids.whatIsTheEstimatedDateForWhenThePhysicalCollectionWillBeAssembledQUuid]|reply_path %}
        {% set samplesDateGeneratedReply = replies[samplesDateGeneratedPath]|reply_str_value %}
        {% if samplesDateGeneratedReply %}
            {% set samplesDateGeneratedReplyText = samplesDateGeneratedReply %}
        {% else %}
            {% set samplesDateGeneratedReplyText = missingInformationText %}
        {% endif %}		
            
        {# Sample Owner/IPR #}
        {% set samplesOwnerPath = [samplesListPath, physicalitemUuid, uuids.whichOrganisationSOwnThePhysicalCollectionQUuid]|reply_path %}
        {% set samplesOwnerReply = replies[samplesOwnerPath]|reply_str_value %}
        {% if samplesOwnerReply %}
            {% set samplesOwnerReplyText = samplesOwnerReply %}
        {% else %}
            {% set samplesOwnerReplyText = missingInformationText %}
        {% endif %}		

        {# Sample estimated size #}
        {% set samplesSizePath = [samplesListPath, physicalitemUuid, uuids.whatIsTheApproximateSizeOfThePhysicalCollectionQUuid]|reply_path %}
        {% set samplesSizeReply = replies[samplesSizePath]|reply_str_value %}
        {% if samplesSizeReply %}
            {% set samplesSizeReplyText = km.entities.answers[samplesSizeReply].label %}
        {% else %}
            {% set samplesOwnerReplyText = missingInformationText %}
        {% endif %}		

        {# Sample project staff responsible #}
        {% set samplesResponsiblePersonPath = [samplesListPath, physicalitemUuid, uuids.whoInThisProjectWillBeResponsibleForThisPhysicalCollectionQUuid]|reply_path %}
        {% set samplesResponsiblePersonReply = replies[samplesResponsiblePersonPath]|reply_str_value %}
        {% if samplesResponsiblePersonReply %}
            {% set samplesResponsiblePersonReplyText = samplesResponsiblePersonReply %}
        {% else %}
            {% set samplesResponsiblePersonReplyText = missingInformationText %}
        {% endif %}		
        
        {# Sample preservation plan #}
        {% set samplesLongTermPlanPath = [samplesListPath, physicalitemUuid, uuids.areThereLongTermPreservationPlansInPlaceForThisPhysicalCollectionQUuid]|reply_path %}
        {% set samplesLongTermPlanReply = replies[samplesLongTermPlanPath]|reply_str_value %}

        {% if samplesLongTermPlanReply == uuids.noItWillNotBeKeptItInPerpetuity_2AUuid %}
            {% set samplesLongTermText = "It will not be kept in perpetuity." %}
            {% set whySamplesNotKeptPath = [samplesLongTermPlanPath, uuids.noItWillNotBeKeptItInPerpetuity_2AUuid, uuids.why_9QUuid]|reply_path %}
            {% set whySamplesNotKeptReply = replies[whySamplesNotKeptPath]|reply_str_value %}

            {% if whySamplesNotKeptReply %}
                {% if whySamplesNotKeptReply == uuids.otherReasonS_8AUuid %}
                    {% set samplesPleaseSpecifyPath = [whySamplesNotKeptPath, uuids.otherReasonS_8AUuid, uuids.pleaseSpecify_14QUuid]|reply_path %}
                    {% set samplesPleaseSpecifyReply = replies[samplesPleaseSpecifyPath]|reply_str_value  %}
                    {% set samplesLongTermText = "It will not be kept in perpetuity. " + samplesPleaseSpecifyReply + "."%}
                {% else %}	
                    {% set samplesLongTermText = "It will not be kept in perpetuity. " + km.entities.answers[whySamplesNotKeptReply].label %}
                {% endif %}
            {% else %}
                {% set samplesLongTermText = "It will not be kept in perpetuity. Reasons why not given." %}

            {% endif %}

        {% elif samplesLongTermPlanReply == uuids.yesItWillBeArchivedInASpecialisedFacilityAUuid %}
            {% set nameOfFacilityPath = [samplesLongTermPlanPath, uuids.yesItWillBeArchivedInASpecialisedFacilityAUuid, uuids.nameOfFacilityQUuid]|reply_path %}
            {% set nameOfFacilityReply = replies[nameOfFacilityPath]|reply_str_value %}
            {% set lengthSampleKeptPath = [samplesLongTermPlanPath, uuids.yesItWillBeArchivedInASpecialisedFacilityAUuid, uuids.howLongWillThisCollectionBeKeptQUuid]|reply_path %}
            {% set lengthSampleKeptReply = replies[lengthSampleKeptPath]|reply_str_value %}

            {% if nameOfFacilityReply and lengthSampleKeptReply %}

                {% if lengthSampleKeptReply == uuids.forAFixedPeriod_4AUuid %}
                    {% set specifyLengthKeptPath = [lengthSampleKeptPath, uuids.forAFixedPeriod_4AUuid, uuids.specifyForHowLongCollectionWillBeKeptQUuid]|reply_path %}
                    {% set specifyLengthKeptReply = replies[specifyLengthKeptPath]|reply_str_value %}
                    {% if specifyLengthKeptReply %}
                        {% set samplesLongTermText = "It will be archived in the following specialised facility: " + nameOfFacilityReply + " and will be kept " + km.entities.answers[lengthSampleKeptReply].label|lower + " of/until " + specifyLengthKeptReply %}
                    {% else %}
                        {% set samplesLongTermText = "It will be archived in the following specialised facility: " + nameOfFacilityReply + " and will be kept " + km.entities.answers[lengthSampleKeptReply].label|lower + " of/until " + missingInformationText %}
                    {% endif %}
                {% elif lengthSampleKeptReply == uuids.asLongAsTechnicallyPossible_4AUuid %}
                    {% set samplesLongTermText = "It will be archived in the following specialised facility: " + nameOfFacilityReply + " and will be kept " + km.entities.answers[lengthSampleKeptReply].label|lower %}
                {% endif %}
            {% else %}
                {% set samplesLongTermText = missingInformationText %}
            {% endif %}

        {% elif samplesLongTermPlanReply == uuids.yesItWillBeStoredAtASpecialisedUkcehFacilityAUuid %}
            {% set samplesLongTermText = "It will be stored at a specialised UKCEH facility." %}

        {% else %}
            {% set samplesLongTermText = missingInformationText %}
        {% endif %}	


        {# put answers together #}
        {%- do declarations_physicalSamples.append({
        'samplesTitleReplyText': samplesTitleReplyText,
        'samplesDescriptionReplyText': samplesDescriptionReplyText,
        'samplesSizeReplyText': samplesSizeReplyText,
        'samplesOwnerReplyText': samplesOwnerReplyText,
        'samplesDateGeneratedReplyText': samplesDateGeneratedReplyText,
        'samplesLongTermText': samplesLongTermText,
        'samplesResponsiblePersonReplyText': samplesResponsiblePersonReplyText
        }) -%}

    {% endfor %}

{% elif (samplesReply == uuids.specifyAListOfPhysicalSamplesYouWillBeProducingAUuid) and (samplesListReply|length == 0) %}	

    {%- do declarations_physicalSamples.append({
    'samplesTitleReplyText': "No physical samples listed!",
    'samplesDescriptionReplyText': "",
    'samplesSizeReplyText': "",
    'samplesOwnerReplyText': "",
    'samplesDateGeneratedReplyText': "",
    'samplesLongTermText': "",
    'samplesResponsiblePersonReplyText': ""
    }) -%}
{% endif %}